name: Run tests for pull requests and merges

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  static_analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: "Install uv"
        uses: astral-sh/setup-uv@v6
      
      - name: "Install"
        run: uv sync --locked --group dev

      - name: "Lint"
        run: uv run ruff check --exit-non-zero-on-fix --fix

      - name: "Format"
        run: uv run ruff format --check

      - name: "Type Check"
        run: uv run basedpyright

  test_quick:
    needs:
      - static_analysis
    timeout-minutes: 10
    strategy:
      matrix:
        python-version: ["3.10"]
        platform: [ubuntu-latest, macos-latest, windows-latest]
    
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: "Install uv"
        uses: astral-sh/setup-uv@v6
      
      - name: "Install"
        run: uv sync --locked --group dev --python ${{ matrix.python-version }}

      - name: "Test"
        run: uv run pytest tests

      - name: "Build"
        run: uv build

  test_all:
    needs:
      - test_quick
    
    timeout-minutes: 10
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        platform: [ubuntu-22.04, ubuntu-latest, macos-14, macos-latest, windows-2022, windows-latest]
    

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: "Install uv"
        uses: astral-sh/setup-uv@v6
      
      - name: "Install"
        run: uv sync --locked --group dev --python ${{ matrix.python-version }}

      - name: "Test"
        run: uv run pytest tests

      - name: "Build"
        run: uv build
